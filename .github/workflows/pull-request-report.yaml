# See https://github.com/EnricoMi/publish-unit-test-result-action#support-fork-repositories-and-dependabot-branches
name: pull-request-report
on:
  workflow_run:
    workflows: [pull-request] # name of the workflow to trigger on completion
    types: [completed]

jobs:
  test-report:
    runs-on: ubuntu-latest
    if: >
      github.event.workflow_run.conclusion != 'skipped' && (
         github.event.sender.login == 'dependabot[bot]' ||
         github.event.workflow_run.head_repository.full_name != github.repository
      )
    steps:
      - name: Download Artifacts
        uses: actions/github-script@v3
        with:
          script: |
            var fs = require('fs');
            var path = require('path');
            var artifacts_path = path.join('${{github.workspace}}', 'artifacts')
            fs.mkdirSync(artifacts_path, { recursive: true })

            var artifacts = await github.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: ${{ github.event.workflow_run.id }},
            });

            for (const artifact of artifacts.data.artifacts) {
               var download = await github.actions.downloadArtifact({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  artifact_id: artifact.id,
                  archive_format: 'zip',
               });
               var artifact_path = path.join(artifacts_path, `${artifact.name}.zip`)
               fs.writeFileSync(artifact_path, Buffer.from(download.data));
               console.log(`Downloaded ${artifact_path}`);
            }
      - name: Extract Artifacts
        run: |
          for file in artifacts/*.zip
          do
            if [ -f "$file" ]
            then
              dir="${file/%.zip/}"
              mkdir -p "$dir"
              unzip -d "$dir" "$file"
            fi
          done
      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        with:
          commit: ${{ github.event.workflow_run.head_sha }}
          files: "artifacts/*/**/TEST-*.xml"
      - uses: reviewdog/action-setup@v1
        with:
          reviewdog_version: latest
      - name: Publish ktlint results
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cat artifacts/build/ktlint-report-in-checkstyle-format.xml \
          | reviewdog -f=checkstyle -name=ktlint -reporter=github-pr-check -level=error
